{
  "contractName": "XAOToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        }
      ],
      "name": "TeamMemberAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TeamTokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "exempt",
          "type": "bool"
        }
      ],
      "name": "TransferDelayExemptionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TEAM_ALLOCATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TRANSFER_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "VESTING_CLIFF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "VESTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastTransferTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "teamMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingStart",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalTeamAllocated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferDelayExempt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        }
      ],
      "name": "addTeamMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTeamTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "calculateVestedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exempt",
          "type": "bool"
        }
      ],
      "name": "setTransferDelayExempt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"TeamMemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TeamTokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"TransferDelayExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_CLIFF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"addTeamMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"calculateVestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTeamTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransferTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setTransferDelayExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingStart\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTeamAllocated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferDelayExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"XAO Protocol Team\",\"details\":\"Implementation of the XAO token with pausable and permit functionality\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"addTeamMember(address,uint256)\":{\"details\":\"Can only be called by the contract owner\",\"params\":{\"allocation\":\"Amount of tokens allocated to the member\",\"member\":\"Address of the team member\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateVestedAmount(address)\":{\"details\":\"Takes into account cliff and linear vesting schedule\",\"params\":{\"member\":\"Address of the team member\"},\"returns\":{\"_0\":\"Amount of tokens vested\"}},\"claimTeamTokens()\":{\"details\":\"Transfers available vested tokens to the team member\"},\"constructor\":{\"details\":\"Initializes the ERC20 token with name, symbol, and mints initial supply\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Can only be called by the contract owner\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTransferDelayExempt(address,bool)\":{\"details\":\"Can only be called by the contract owner\",\"params\":{\"account\":\"Address to update exemption status\",\"exempt\":\"Whether the address should be exempt from transfer delays\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Overrides ERC20 totalSupply() to include both circulating and reserved tokens\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Can only be called by the contract owner\"}},\"stateVariables\":{\"INITIAL_SUPPLY\":{\"details\":\"Stored as a constant with 18 decimal places\"}},\"title\":\"XAO Token Contract\",\"version\":1},\"userdoc\":{\"events\":{\"TeamMemberAdded(address,uint256)\":{\"notice\":\"Emitted when a team member is added\"},\"TeamTokensClaimed(address,uint256)\":{\"notice\":\"Emitted when team tokens are claimed\"},\"TransferDelayExemptionUpdated(address,bool)\":{\"notice\":\"Emitted when transfer delay exemption is updated\"}},\"kind\":\"user\",\"methods\":{\"INITIAL_SUPPLY()\":{\"notice\":\"The total initial supply of XAO tokens (1 billion)\"},\"TEAM_ALLOCATION()\":{\"notice\":\"The portion of tokens allocated to the team (20%)\"},\"TRANSFER_DELAY()\":{\"notice\":\"The minimum delay between transfers (anti flash loan)\"},\"VESTING_CLIFF()\":{\"notice\":\"The vesting cliff period for team tokens\"},\"VESTING_DURATION()\":{\"notice\":\"The total vesting duration for team tokens\"},\"addTeamMember(address,uint256)\":{\"notice\":\"Adds a new team member with token allocation\"},\"calculateVestedAmount(address)\":{\"notice\":\"Calculates vested tokens for a team member\"},\"claimTeamTokens()\":{\"notice\":\"Claims vested team tokens\"},\"constructor\":{\"notice\":\"Creates a new XAO token contract\"},\"lastTransferTime(address)\":{\"notice\":\"Mapping to track last transfer timestamp for each address\"},\"pause()\":{\"notice\":\"Pauses all token transfers\"},\"setTransferDelayExempt(address,bool)\":{\"notice\":\"Sets transfer delay exemption status for an address\"},\"teamMembers(address)\":{\"notice\":\"Mapping of team member addresses to their vesting details\"},\"totalSupply()\":{\"notice\":\"Returns the total token supply including reserved team allocation\"},\"totalTeamAllocated()\":{\"notice\":\"Total amount of team tokens allocated\"},\"transferDelayExempt(address)\":{\"notice\":\"Mapping to track addresses exempt from transfer delay\"},\"unpause()\":{\"notice\":\"Unpauses all token transfers\"}},\"notice\":\"This is the main token contract for the XAO ecosystem\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/XAOToken.sol\":\"XAOToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/XAOToken.sol\":{\"keccak256\":\"0xee47470861ab94033c6c3c301ec2ea021ed520f90d7de5304ea16b26164f14af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89a7b554fad570b407231aa36046643aa5ec4c3d1dd9e20a449abde1aa5ddaf\",\"dweb:/ipfs/QmSRqcDap51t7JNjRstmSLvK8PjnUfseW2LrkW9AmZFkVM\"]}},\"version\":1}",
  "bytecode": "0x610160604081815234620005375762000018826200053c565b6009825260209182810191682c20a7902a37b5b2b760b91b9384845281519462000042866200053c565b600986528186015281519062000058826200053c565b60038083526258414f60e81b8284015283519662000076886200053c565b6001808952603160f81b848a0190815282516001600160401b03949192919085811162000437578154948386811c961680156200052c575b8887101462000516578190601f96878111620004c0575b50889087831160011462000459576000926200044d575b505060001982841b1c191690831b1781555b865190858211620004375760049788548481811c911680156200042c575b898210146200041757868111620003cc575b508790868411600114620003615793839491849260009562000355575b50501b92600019911b1c19161785555b620001568762000558565b97610120988952620001688a6200071c565b97610140988952519020988960e0525190209061010098828a524660a052865192858401917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528885015260608401524660808401523060a084015260a0835260c0830193838510908511176200034057838752825190206080523060c052600980546001600160a81b0319811633600881811b610100600160a81b0316929092179093551c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3331562000300575050506002546b0295be96e64066972000000092838201809211620002eb57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a35191611d149384620008d585396080518461196f015260a05184611a3b015260c05184611939015260e051846119be015251836119e4015251826109cc015251816109f60152f35b601190634e487b7160e01b6000525260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300916101049160649562461bcd60e51b865260c483015260e48201520152fd5b604186634e487b7160e01b6000525260246000fd5b0151935038806200013b565b9190601f198416928a600052848a6000209460005b8c89838310620003b4575050501062000399575b50505050811b0185556200014b565b01519060f884600019921b161c19169055388080806200038a565b86860151895590970196948501948893500162000376565b89600052886000208780860160051c8201928b87106200040d575b0160051c019085905b828110620004005750506200011e565b60008155018590620003f0565b92508192620003e7565b60228a634e487b7160e01b6000525260246000fd5b90607f16906200010c565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b90859350601f19831691856000528a6000209260005b8c828210620004a9575050841162000490575b505050811b018155620000ee565b015160001983861b60f8161c1916905538808062000482565b83850151865589979095019493840193016200046f565b90915083600052886000208780850160051c8201928b86106200050c575b918791869594930160051c01915b828110620004fc575050620000c5565b60008155859450879101620004ec565b92508192620004de565b634e487b7160e01b600052602260045260246000fd5b95607f1695620000ae565b600080fd5b604081019081106001600160401b038211176200043757604052565b80516020919082811015620005f7575090601f8251116200059657808251920151908083106200058757501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620005dd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620005b9565b6001600160401b03811162000437576005928354926001938481811c9116801562000711575b838210146200051657601f8111620006da575b5081601f841160011462000670575092829391839260009462000664575b50501b916000199060031b1c191617905560ff90565b0151925038806200064e565b919083601f1981168760005284600020946000905b88838310620006bf5750505010620006a5575b505050811b01905560ff90565b015160001960f88460031b161c1916905538808062000698565b85870151885590960195948501948793509081019062000685565b8560005284601f846000209201871c820191601f8601881c015b8281106200070457505062000630565b60008155018590620006f4565b90607f16906200061d565b805160209081811015620007aa5750601f8251116200074957808251920151908083106200058757501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000790575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200076c565b906001600160401b0382116200043757600654926001938481811c91168015620008c9575b838210146200051657601f81116200088f575b5081601f841160011462000823575092829391839260009462000817575b50501b916000199060031b1c19161760065560ff90565b01519250388062000800565b919083601f198116600660005284600020946000905b888383106200087457505050106200085a575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806200084c565b85870151885590960195948501948793509081019062000839565b600660005284601f84600020920160051c820191601f860160051c015b828110620008bc575050620007e2565b60008155018590620008ac565b90607f1690620007cf56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146111c257508163095ea7b3146111985781630d2d8a311461116057816313758b681461114157816318160ddd14610df45781631ac3452b1461112457816323b872dd1461105a5781632af5356a14610e1b5781632ff2e9dc14610df4578163313ce56714610dd857816334d533f714610d9a5781633644e51514610d7d5781633950935114610d2d5781633f4ba83a14610c975781634cfc4d3014610c785781635c975abb14610c5457816363f3dbe514610c3657816370a0823114610bff578163715018a614610b9e5781637ecebe0014610b665781638456cb5914610ad257816384b0196e146109b45781638d13192b146107a75781638da5cb5b1461077a57816395d89b411461068f578163a457c2d7146105e7578163a9059cbb146105b6578163b3c95fe21461052d578163c836292b146104ce578163d505accf14610315578163dd62ed3e146102cc578163f2fde38b146101ef57508063fd99cbed146101ca5763ffa06b2a1461019b57600080fd5b346101c65760203660031901126101c6576020906101bf6101ba6112d3565b611c17565b9051908152f35b5080fd5b50346101c657816003193601126101c657602090516aa56fa5b99019a5c80000008152f35b9050346102c85760203660031901126102c85761020a6112d3565b610212611304565b6001600160a01b0381811693909290841561027657505060098054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101c657806003193601126101c657806020926102ea6112d3565b6102f26112ee565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b839150346101c65760e03660031901126101c6576103316112d3565b6103396112ee565b906044359260643560843560ff811681036104ca578142116104875760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610474578b5251902061041c91610414916103ee611936565b908c519161190160f01b83526002830152602282015260c43591604260a43592206118a7565b91909161178d565b1603610431575061042e93945061168b565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b5050346101c65760203660031901126101c65760809181906001600160a01b036104f66112d3565b168152600a602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b5050346101c657806003193601126101c6576105476112d3565b90602435918215158084036105b2577faa8aa83243031a8b4cddf3ecadd12e4d417b36f774f349ce9f8d1760abc67484926105aa602093610586611304565b60018060a01b031695868852600c85528288209060ff801983541691151516179055565b51908152a280f35b8480fd5b5050346101c657806003193601126101c6576020906105e06105d66112d3565b6024359033611410565b5160018152f35b9050823461068c578260031936011261068c576106026112d3565b918360243592338152600160205281812060018060a01b038616825260205220549082821061063b576020856105e0858503873361168b565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b919050346102c857826003193601126102c857805191838154906106b28261135f565b8086529260019280841690811561074f57506001146106f3575b6106ef86866106dd828b03836113cb565b51918291602083526020830190611293565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610737575050506106dd8260206106ef9582010194386106cc565b80546020878701810191909152909501948101610719565b90506106ef9750869350602092506106dd94915060ff191682840152151560051b82010194386106cc565b5050346101c657816003193601126101c657600954905160089190911c6001600160a01b03168152602090f35b8383346101c657806003193601126101c6576107c16112d3565b926024938435906107d0611304565b6001600160a01b031692831561098157838552602092600a845260ff6003838820015416610949578215610914576aa56fa5b99019a5c800000061081684600d546113ed565b116108d457815196608088019188831067ffffffffffffffff8411176108c35750507f3a039d423feae57db865758a88814c0404d53381c45d2caacd35f3991dc165619495966108ac91835283815260038582018981528483014281526060840191600183528a8c52600a8952868c209451855551600185015551600284015551151591019060ff801983541691151516179055565b6108b882600d546113ed565b600d5551908152a280f35b634e487b7160e01b88526041905286fd5b60178785606494519362461bcd60e51b85528401528201527f45786365656473207465616d20616c6c6f636174696f6e0000000000000000006044820152fd5b60128785606494519362461bcd60e51b85528401528201527124b73b30b634b21030b63637b1b0ba34b7b760711b6044820152fd5b60158785606494519362461bcd60e51b85528401528201527420b63932b0b23c9030903a32b0b69036b2b6b132b960591b6044820152fd5b5162461bcd60e51b8152602081840152600f818701526e496e76616c6964206164647265737360881b6044820152606490fd5b919050346102c857826003193601126102c8576109f07f0000000000000000000000000000000000000000000000000000000000000000611a61565b92610a1a7f0000000000000000000000000000000000000000000000000000000000000000611b5d565b908251926020928385019585871067ffffffffffffffff881117610abf57509280610a75838896610a68998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190611293565b91898303908a0152611293565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610aa857505050500390f35b835185528695509381019392810192600101610a99565b634e487b7160e01b845260419052602483fd5b9050346102c857826003193601126102c857610aec611304565b6009549060ff8216610b30575060ff1916600117600955513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b606490602084519162461bcd60e51b8352820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152fd5b5050346101c65760203660031901126101c65760209181906001600160a01b03610b8e6112d3565b1681526007845220549051908152f35b833461068c578060031936011261068c57610bb7611304565b60098054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101c65760203660031901126101c65760209181906001600160a01b03610c276112d3565b16815280845220549051908152f35b5050346101c657816003193601126101c6576020905162ed4e008152f35b5050346101c657816003193601126101c65760209060ff6009541690519015158152f35b5050346101c657816003193601126101c657602090516303b538008152f35b9050346102c857826003193601126102c857610cb1611304565b6009549060ff821615610cf3575060ff1916600955513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b5050346101c657806003193601126101c6576105e0602092610d76610d506112d3565b338352600186528483206001600160a01b038216845286529184902054602435906113ed565b903361168b565b5050346101c657816003193601126101c6576020906101bf611936565b5050346101c65760203660031901126101c65760209160ff9082906001600160a01b03610dc56112d3565b168152600c855220541690519015158152f35b5050346101c657816003193601126101c6576020905160128152f35b5050346101c657816003193601126101c657602090516b033b2e3c9fd0803ce80000008152f35b919050346102c857826003193601126102c857338352602090600a82528084209260ff6003850154161561102557600284015462ed4e008101809111611012574210610fd9576001610e6c33611c17565b9401805480860395808711610fc6578114610f8e5785610e8b916113ed565b90553315610f4d5760ff60095416610f145750907f32a7537ee28ab9e44edfe4f55db5f08bf3a2bc8c09f2b5e0eaf20715d2609eab91610ecd846002546113ed565b6002553385528482528085208481540190558051848152857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843393a3519283523392a280f35b82606492519162461bcd60e51b83528201526015602482015274151bdad95b881d1c985b9cd9995c881c185d5cd959605a1b6044820152fd5b82606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b835162461bcd60e51b815280840186905260126024820152714e6f20746f6b656e7320746f20636c61696d60701b6044820152606490fd5b634e487b7160e01b885260118452602488fd5b82606492519162461bcd60e51b8352820152601560248201527414dd1a5b1b081a5b8818db1a5999881c195c9a5bd9605a1b6044820152fd5b634e487b7160e01b865260118252602486fd5b82606492519162461bcd60e51b835282015260116024820152702737ba1030903a32b0b69036b2b6b132b960791b6044820152fd5b839150346101c65760603660031901126101c6576110766112d3565b61107e6112ee565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036110b8575b6020866105e0878787611410565b8482106110e157509183916110d6602096956105e09503338361168b565b9193948193506110aa565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101c657816003193601126101c65760209051610e108152f35b5050346101c657816003193601126101c657602090600d549051908152f35b5050346101c65760203660031901126101c65760209181906001600160a01b036111886112d3565b168152600b845220549051908152f35b5050346101c657806003193601126101c6576020906105e06111b86112d3565b602435903361168b565b849084346102c857826003193601126102c857826003546111e28161135f565b8085529160019180831690811561126b575060011461120e575b5050506106dd826106ef9403836113cb565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610611253575050506106dd8260206106ef95820101946111fc565b80546020878701810191909152909501948101611236565b6106ef9750869350602092506106dd94915060ff191682840152151560051b820101946111fc565b919082519283825260005b8481106112bf575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161129e565b600435906001600160a01b03821682036112e957565b600080fd5b602435906001600160a01b03821682036112e957565b60095460081c6001600160a01b0316330361131b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c9216801561138f575b602083101461137957565b634e487b7160e01b600052602260045260246000fd5b91607f169161136e565b6040810190811067ffffffffffffffff8211176113b557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176113b557604052565b919082018092116113fa57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116801580159491939192919061163857169283156115e75760ff600954166115aa578080611591575b611531575b80611518575b611503575b6000828152806020526040812054918083106114af57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b81600052600b60205242604060002055611453565b5081600052600c60205260ff604060002054161561144e565b82600052600b602052604060002054610e1081018091116113fa574210156114485760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c8819195b185e481b9bdd081b595d60521b6044820152606490fd5b5082600052600c60205260ff6040600020541615611443565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c881c185d5cd959605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561173c57169182156116ec5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6005811015611891578061179e5750565b600181036117eb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036118385760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461184157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161192a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561191d5781516001600160a01b03811615611917579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611a38575b15611991577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176113b55760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611968565b60ff8114611a9f5760ff811690601f8211611a8d5760405191611a8383611399565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000611ab28361135f565b80835292600190818116908115611b3b5750600114611adc575b50611ad9925003826113cb565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b848310611b205750611ad9935050810160200138611acc565b81935090816020925483858901015201910190918492611b07565b905060209250611ad994915060ff191682840152151560051b82010138611acc565b60ff8114611b7f5760ff811690601f8211611a8d5760405191611a8383611399565b50604051600654816000611b928361135f565b80835292600190818116908115611b3b5750600114611bb85750611ad9925003826113cb565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b848310611bfc5750611ad9935050810160200138611acc565b81935090816020925483858901015201910190918492611be3565b6001600160a01b03166000908152600a60205260408120600381015490919060ff1615611cd95760028201549062ed4e008201808311611ca3574210611cd3576303b5380092838301808411611cbf57421015611cb7575491420391428311611ca357828102928184041490151715611c8f57500490565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b925050505490565b634e487b7160e01b83526011600452602483fd5b91505090565b90509056fea2646970667358221220077d42569b1c9fbc6135518519ec0966a5dda4d75a2f2fc47ea8f488b94b51f664736f6c63430008130033",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146111c257508163095ea7b3146111985781630d2d8a311461116057816313758b681461114157816318160ddd14610df45781631ac3452b1461112457816323b872dd1461105a5781632af5356a14610e1b5781632ff2e9dc14610df4578163313ce56714610dd857816334d533f714610d9a5781633644e51514610d7d5781633950935114610d2d5781633f4ba83a14610c975781634cfc4d3014610c785781635c975abb14610c5457816363f3dbe514610c3657816370a0823114610bff578163715018a614610b9e5781637ecebe0014610b665781638456cb5914610ad257816384b0196e146109b45781638d13192b146107a75781638da5cb5b1461077a57816395d89b411461068f578163a457c2d7146105e7578163a9059cbb146105b6578163b3c95fe21461052d578163c836292b146104ce578163d505accf14610315578163dd62ed3e146102cc578163f2fde38b146101ef57508063fd99cbed146101ca5763ffa06b2a1461019b57600080fd5b346101c65760203660031901126101c6576020906101bf6101ba6112d3565b611c17565b9051908152f35b5080fd5b50346101c657816003193601126101c657602090516aa56fa5b99019a5c80000008152f35b9050346102c85760203660031901126102c85761020a6112d3565b610212611304565b6001600160a01b0381811693909290841561027657505060098054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101c657806003193601126101c657806020926102ea6112d3565b6102f26112ee565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b839150346101c65760e03660031901126101c6576103316112d3565b6103396112ee565b906044359260643560843560ff811681036104ca578142116104875760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610474578b5251902061041c91610414916103ee611936565b908c519161190160f01b83526002830152602282015260c43591604260a43592206118a7565b91909161178d565b1603610431575061042e93945061168b565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b5050346101c65760203660031901126101c65760809181906001600160a01b036104f66112d3565b168152600a602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b5050346101c657806003193601126101c6576105476112d3565b90602435918215158084036105b2577faa8aa83243031a8b4cddf3ecadd12e4d417b36f774f349ce9f8d1760abc67484926105aa602093610586611304565b60018060a01b031695868852600c85528288209060ff801983541691151516179055565b51908152a280f35b8480fd5b5050346101c657806003193601126101c6576020906105e06105d66112d3565b6024359033611410565b5160018152f35b9050823461068c578260031936011261068c576106026112d3565b918360243592338152600160205281812060018060a01b038616825260205220549082821061063b576020856105e0858503873361168b565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b919050346102c857826003193601126102c857805191838154906106b28261135f565b8086529260019280841690811561074f57506001146106f3575b6106ef86866106dd828b03836113cb565b51918291602083526020830190611293565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610737575050506106dd8260206106ef9582010194386106cc565b80546020878701810191909152909501948101610719565b90506106ef9750869350602092506106dd94915060ff191682840152151560051b82010194386106cc565b5050346101c657816003193601126101c657600954905160089190911c6001600160a01b03168152602090f35b8383346101c657806003193601126101c6576107c16112d3565b926024938435906107d0611304565b6001600160a01b031692831561098157838552602092600a845260ff6003838820015416610949578215610914576aa56fa5b99019a5c800000061081684600d546113ed565b116108d457815196608088019188831067ffffffffffffffff8411176108c35750507f3a039d423feae57db865758a88814c0404d53381c45d2caacd35f3991dc165619495966108ac91835283815260038582018981528483014281526060840191600183528a8c52600a8952868c209451855551600185015551600284015551151591019060ff801983541691151516179055565b6108b882600d546113ed565b600d5551908152a280f35b634e487b7160e01b88526041905286fd5b60178785606494519362461bcd60e51b85528401528201527f45786365656473207465616d20616c6c6f636174696f6e0000000000000000006044820152fd5b60128785606494519362461bcd60e51b85528401528201527124b73b30b634b21030b63637b1b0ba34b7b760711b6044820152fd5b60158785606494519362461bcd60e51b85528401528201527420b63932b0b23c9030903a32b0b69036b2b6b132b960591b6044820152fd5b5162461bcd60e51b8152602081840152600f818701526e496e76616c6964206164647265737360881b6044820152606490fd5b919050346102c857826003193601126102c8576109f07f0000000000000000000000000000000000000000000000000000000000000000611a61565b92610a1a7f0000000000000000000000000000000000000000000000000000000000000000611b5d565b908251926020928385019585871067ffffffffffffffff881117610abf57509280610a75838896610a68998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190611293565b91898303908a0152611293565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610aa857505050500390f35b835185528695509381019392810192600101610a99565b634e487b7160e01b845260419052602483fd5b9050346102c857826003193601126102c857610aec611304565b6009549060ff8216610b30575060ff1916600117600955513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b606490602084519162461bcd60e51b8352820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152fd5b5050346101c65760203660031901126101c65760209181906001600160a01b03610b8e6112d3565b1681526007845220549051908152f35b833461068c578060031936011261068c57610bb7611304565b60098054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101c65760203660031901126101c65760209181906001600160a01b03610c276112d3565b16815280845220549051908152f35b5050346101c657816003193601126101c6576020905162ed4e008152f35b5050346101c657816003193601126101c65760209060ff6009541690519015158152f35b5050346101c657816003193601126101c657602090516303b538008152f35b9050346102c857826003193601126102c857610cb1611304565b6009549060ff821615610cf3575060ff1916600955513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b5050346101c657806003193601126101c6576105e0602092610d76610d506112d3565b338352600186528483206001600160a01b038216845286529184902054602435906113ed565b903361168b565b5050346101c657816003193601126101c6576020906101bf611936565b5050346101c65760203660031901126101c65760209160ff9082906001600160a01b03610dc56112d3565b168152600c855220541690519015158152f35b5050346101c657816003193601126101c6576020905160128152f35b5050346101c657816003193601126101c657602090516b033b2e3c9fd0803ce80000008152f35b919050346102c857826003193601126102c857338352602090600a82528084209260ff6003850154161561102557600284015462ed4e008101809111611012574210610fd9576001610e6c33611c17565b9401805480860395808711610fc6578114610f8e5785610e8b916113ed565b90553315610f4d5760ff60095416610f145750907f32a7537ee28ab9e44edfe4f55db5f08bf3a2bc8c09f2b5e0eaf20715d2609eab91610ecd846002546113ed565b6002553385528482528085208481540190558051848152857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843393a3519283523392a280f35b82606492519162461bcd60e51b83528201526015602482015274151bdad95b881d1c985b9cd9995c881c185d5cd959605a1b6044820152fd5b82606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b835162461bcd60e51b815280840186905260126024820152714e6f20746f6b656e7320746f20636c61696d60701b6044820152606490fd5b634e487b7160e01b885260118452602488fd5b82606492519162461bcd60e51b8352820152601560248201527414dd1a5b1b081a5b8818db1a5999881c195c9a5bd9605a1b6044820152fd5b634e487b7160e01b865260118252602486fd5b82606492519162461bcd60e51b835282015260116024820152702737ba1030903a32b0b69036b2b6b132b960791b6044820152fd5b839150346101c65760603660031901126101c6576110766112d3565b61107e6112ee565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036110b8575b6020866105e0878787611410565b8482106110e157509183916110d6602096956105e09503338361168b565b9193948193506110aa565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101c657816003193601126101c65760209051610e108152f35b5050346101c657816003193601126101c657602090600d549051908152f35b5050346101c65760203660031901126101c65760209181906001600160a01b036111886112d3565b168152600b845220549051908152f35b5050346101c657806003193601126101c6576020906105e06111b86112d3565b602435903361168b565b849084346102c857826003193601126102c857826003546111e28161135f565b8085529160019180831690811561126b575060011461120e575b5050506106dd826106ef9403836113cb565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610611253575050506106dd8260206106ef95820101946111fc565b80546020878701810191909152909501948101611236565b6106ef9750869350602092506106dd94915060ff191682840152151560051b820101946111fc565b919082519283825260005b8481106112bf575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161129e565b600435906001600160a01b03821682036112e957565b600080fd5b602435906001600160a01b03821682036112e957565b60095460081c6001600160a01b0316330361131b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c9216801561138f575b602083101461137957565b634e487b7160e01b600052602260045260246000fd5b91607f169161136e565b6040810190811067ffffffffffffffff8211176113b557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176113b557604052565b919082018092116113fa57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116801580159491939192919061163857169283156115e75760ff600954166115aa578080611591575b611531575b80611518575b611503575b6000828152806020526040812054918083106114af57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b81600052600b60205242604060002055611453565b5081600052600c60205260ff604060002054161561144e565b82600052600b602052604060002054610e1081018091116113fa574210156114485760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c8819195b185e481b9bdd081b595d60521b6044820152606490fd5b5082600052600c60205260ff6040600020541615611443565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c881c185d5cd959605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561173c57169182156116ec5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6005811015611891578061179e5750565b600181036117eb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036118385760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461184157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161192a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561191d5781516001600160a01b03811615611917579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611a38575b15611991577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176113b55760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611968565b60ff8114611a9f5760ff811690601f8211611a8d5760405191611a8383611399565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000611ab28361135f565b80835292600190818116908115611b3b5750600114611adc575b50611ad9925003826113cb565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b848310611b205750611ad9935050810160200138611acc565b81935090816020925483858901015201910190918492611b07565b905060209250611ad994915060ff191682840152151560051b82010138611acc565b60ff8114611b7f5760ff811690601f8211611a8d5760405191611a8383611399565b50604051600654816000611b928361135f565b80835292600190818116908115611b3b5750600114611bb85750611ad9925003826113cb565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b848310611bfc5750611ad9935050810160200138611acc565b81935090816020925483858901015201910190918492611be3565b6001600160a01b03166000908152600a60205260408120600381015490919060ff1615611cd95760028201549062ed4e008201808311611ca3574210611cd3576303b5380092838301808411611cbf57421015611cb7575491420391428311611ca357828102928184041490151715611c8f57500490565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b925050505490565b634e487b7160e01b83526011600452602483fd5b91505090565b90509056fea2646970667358221220077d42569b1c9fbc6135518519ec0966a5dda4d75a2f2fc47ea8f488b94b51f664736f6c63430008130033",
  "immutableReferences": {
    "6051": [
      {
        "length": 32,
        "start": 6511
      }
    ],
    "6053": [
      {
        "length": 32,
        "start": 6715
      }
    ],
    "6055": [
      {
        "length": 32,
        "start": 6457
      }
    ],
    "6057": [
      {
        "length": 32,
        "start": 6590
      }
    ],
    "6059": [
      {
        "length": 32,
        "start": 6628
      }
    ],
    "6062": [
      {
        "length": 32,
        "start": 2508
      }
    ],
    "6065": [
      {
        "length": 32,
        "start": 2550
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "561:6847:42:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;-1:-1:-1;561:6847:42;;;;-1:-1:-1;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;2069:17:11;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;3251:45:29;;;:::i;:::-;3243:53;;;;;3317:51;;;:::i;:::-;3306:62;;;;;561:6847:42;3392:22:29;;3378:36;;;;561:6847:42;3441:25:29;;3424:42;;;;;;3494:13;3477:30;;561:6847:42;;4054:81:29;;;;561:6847:42;1929:95:29;561:6847:42;;1929:95:29;;;561:6847:42;1929:95:29;;;561:6847:42;3494:13:29;1929:95;;;561:6847:42;4129:4:29;3477:30;1929:95;;;3477:30;4054:81;;1929:95;561:6847:42;;;;;;;;;;;;;;;;;4044:92:29;;1929:95;3517:48;4129:4;1929:95;3575:27;561:6847:42;;;-1:-1:-1;;;;;;561:6847:42;;734:10:23;561:6847:42;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;;;-1:-1:-1;;;;;561:6847:42;2566:40:2;-1:-1:-1;;2566:40:2;734:10:23;8603:21:11;561:6847:42;;;;;8731:22:11;561:6847:42;;;;;;;;;;;;-1:-1:-1;561:6847:42;8952:37:11;561:6847:42;8731:22:11;561:6847:42;734:10:23;561:6847:42;;;;;;;;;;;;;;;;;;;734:10:23;8952:37:11;;561:6847:42;;;;;;;;1929:95:29;561:6847:42;;;;;3477:30:29;561:6847:42;;;;;1929:95:29;561:6847:42;;;;;3378:36:29;561:6847:42;;;;;;;;;;;;;;;;;;;;;;824:22;561:6847;;;;-1:-1:-1;824:22:42;;;-1:-1:-1;824:22:42;561:6847;;;;;983:3;561:6847;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;-1:-1:-1;561:6847:42;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;-1:-1:-1;561:6847:42;;2069:17:11;561:6847:42;;-1:-1:-1;561:6847:42;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;:::o;2895:341:25:-;561:6847:42;;3040:2:25;;561:6847:42;3018:24:25;;;3040:2;;;561:6847:42;;1835:2:25;561:6847:42;;1821:16:25;1817:72;;561:6847:42;;;;;;;;;;;;1930:36:25;;3058:27;:::o;561:6847:42:-;;;;;;;;;;1930:36:25;3058:27;:::o;1817:72::-;561:6847:42;;;1860:18:25;;;;;;;;;;;561:6847:42;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;1835:2:25;561:6847:42;;;;;;;1860:18:25;;;;561:6847:42;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;3014:216:25;-1:-1:-1;;;;;561:6847:42;;;;3282:13:29;561:6847:42;;;;;;;;;;;;;;;;3014:216:25;561:6847:42;;;;;;;;;;;3014:216:25;561:6847:42;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;1371:66:25;3176:43;:::o;561:6847:42:-;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;1371:66:25;3176:43;:::o;561:6847:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;-1:-1:-1;561:6847:42;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;2895:341:25;561:6847:42;;3040:2:25;;3018:24;;;3040:2;;;561:6847:42;1835:2:25;561:6847:42;;1821:16:25;1817:72;;561:6847:42;;;;;;;;;;;;1930:36:25;;3058:27;:::o;1817:72::-;561:6847:42;;;1860:18:25;;;;;;;;;;;561:6847:42;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;1835:2:25;561:6847:42;;;;;;;1860:18:25;;;;561:6847:42;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;3014:216:25;561:6847:42;-1:-1:-1;;;;;561:6847:42;;;;3351:16:29;561:6847:42;;;;;;;;;;;;;;3014:216:25;561:6847:42;;;;;;;;;;;3014:216:25;561:6847:42;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;3351:16:29;561:6847:42;1371:66:25;3176:43;:::o;561:6847:42:-;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;3351:16:29;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;3351:16:29;561:6847:42;1371:66:25;3176:43;:::o;561:6847:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;3351:16:29;-1:-1:-1;561:6847:42;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;",
  "deployedSourceMap": "561:6847:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;:::i;:::-;1063:62:2;;:::i;:::-;-1:-1:-1;;;;;561:6847:42;;;;;;;2162:22:2;;561:6847:42;;-1:-1:-1;;2518:6:2;561:6847:42;;-1:-1:-1;;;;;;561:6847:42;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;;2566:40:2;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;2139:15:13;;:27;561:6847:42;;;;;;;;;;;;;;;3200:7:13;561:6847:42;;;;;;;;;;;;;;;;2242:79:13;561:6847:42;2242:79:13;;561:6847:42;1125:95:13;561:6847:42;;1125:95:13;;;;561:6847:42;;;;;1125:95:13;;561:6847:42;1125:95:13;561:6847:42;1125:95:13;;561:6847:42;;1125:95:13;;561:6847:42;;1125:95:13;;561:6847:42;;2242:79:13;;561:6847:42;;;;;;;;;;;;;;;2232:90:13;;6791:5:28;;6744:25;;4893:20:29;;:::i;:::-;8496:231:28;;;;-1:-1:-1;;;8496:231:28;;;;;;;;;;561:6847:42;;;8496:231:28;561:6847:42;;8496:231:28;;6744:25;:::i;:::-;6791:5;;;;:::i;:::-;561:6847:42;2450:15:13;1125:95;;2536:5;;;;;;:::i;:::-;561:6847:42;;1125:95:13;561:6847:42;;;;;;;;;1125:95:13;;;;;;561:6847:42;1125:95:13;;561:6847:42;1125:95:13;561:6847:42;;;1125:95:13;;561:6847:42;-1:-1:-1;;;561:6847:42;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;:::i;:::-;;;;1618:49;561:6847;;;;;;1618:49;561:6847;1618:49;;561:6847;1618:49;561:6847;;1618:49;;;561:6847;1618:49;;561:6847;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5940:46;1063:62:2;5888:37:42;561:6847;1063:62:2;;;:::i;:::-;561:6847:42;;;;;;;;;;5888:19;561:6847;;;;;;;;;;;;;;;;;;;;5888:37;561:6847;;;;5940:46;561:6847;;;;;;;;;;;;;;;;;;;;;;3894:6:11;561:6847:42;;:::i;:::-;;;734:10:23;;3894:6:11;:::i;:::-;561:6847:42;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;734:10:23;;561:6847:42;;;;;;;;;;;;;;;;;;;;;6792:35:11;;;;561:6847:42;;;;6928:34:11;561:6847:42;;;;734:10:23;6928:34:11;:::i;561:6847:42:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6:2;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1063:62:2;;;:::i;:::-;-1:-1:-1;;;;;561:6847:42;;3375:20;;561:6847;;;;;;;3434:11;561:6847;;;;;;;3434:28;561:6847;;;;3506:14;;561:6847;;;2839:5:33;561:6847:42;3561:18;561:6847;2839:5:33;:::i;:::-;3561:53:42;561:6847;;;;;;;;;;;;;;;;;;;;3909:35;561:6847;;;;;;;;;;;3675:153;;;561:6847;;;3675:153;;;3774:15;561:6847;;3675:153;;;561:6847;;;;;;;3434:11;561:6847;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:5:33;561:6847:42;3561:18;561:6847;2839:5:33;:::i;:::-;3561:18:42;561:6847;;;;;3909:35;561:6847;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;5427:41:29;:5;:41;:::i;:::-;5482:8;:47;:8;:47;:::i;:::-;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5543:13:29;;561:6847:42;;;;5578:4:29;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;1063:62:2;;:::i;:::-;1685:7:5;561:6847:42;;;;;;;-1:-1:-1;;;561:6847:42;2255:4:5;561:6847:42;1685:7:5;561:6847:42;;734:10:23;561:6847:42;;2274:20:5;;561:6847:42;;2274:20:5;561:6847:42;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;:::i;:::-;;;;2698:7:13;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;1063:62:2;;:::i;:::-;2518:6;561:6847:42;;-1:-1:-1;;;;;;561:6847:42;;;;;;;;;-1:-1:-1;;;;;561:6847:42;2566:40:2;561:6847:42;;2566:40:2;561:6847:42;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:8;561:6847;;;;;;;;;;;;;;;;;;;;1685:7:5;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:8;561:6847;;;;;;;;;;;;;;;;;1063:62:2;;:::i;:::-;1685:7:5;561:6847:42;;;;;;;;-1:-1:-1;;;561:6847:42;1685:7:5;561:6847:42;;734:10:23;561:6847:42;;2521:22:5;;561:6847:42;;2521:22:5;561:6847:42;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;6021:38:11;561:6847:42;;6021:38:11;561:6847:42;;:::i;:::-;734:10:23;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;;;;;;;;;6021:38:11;:::i;:::-;734:10:23;;6021:38:11;:::i;561:6847:42:-;;;;;;;;;;;;;;;2922:20:13;;;:::i;561:6847:42:-;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;;;-1:-1:-1;;;;;561:6847:42;;:::i;:::-;;;;1876:51;561:6847;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:2:11;561:6847:42;;;;;;;;;;;;;;;;;;;;824:22;561:6847;;;;;;;;;;;;;;;;;;4155:10;561:6847;;;;4143:11;561:6847;;;;;4184:19;561:6847;;4184:19;;561:6847;;;;;4275:23;;;561:6847;1090:8;561:6847;;;;;;;4256:15;:61;561:6847;;4484:18;4398:33;4155:10;4398:33;:::i;:::-;4484:18;;561:6847;;;;;;;;;;;4521:19;;561:6847;;2839:5:33;;;;:::i;:::-;561:6847:42;;4155:10;8603:21:11;561:6847:42;;;1685:7:5;561:6847:42;;;;;;4694:46;561:6847;8731:22:11;561:6847:42;4275:23;561:6847;8731:22:11;:::i;:::-;4275:23:42;561:6847;4155:10;561:6847;;;;;;;;;;;;;;;;;;;4155:10;8952:37:11;4155:10:42;;8952:37:11;;561:6847:42;;;;4155:10;4694:46;;561:6847;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;734:10:23;561:6847:42;;;;;;11264:17:11;;;11244:37;;11240:243;;561:6847:42;;5424:6:11;;;;;;:::i;11240:243::-;11305:26;;;561:6847:42;;;;;;11432:25:11;561:6847:42;;;5424:6:11;561:6847:42;;734:10:23;11432:25:11;;:::i;:::-;11240:243;;;;;;;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:7;561:6847;;;;;;;;;;;;;;;;;;;1988:33;561:6847;;;;;;;;;;;;;;;-1:-1:-1;;561:6847:42;;;;;;;;-1:-1:-1;;;;;561:6847:42;;:::i;:::-;;;;1748:51;561:6847;;;;;;;;;;;;;;;;;;;;;;;;;;4606:6:11;561:6847:42;;:::i;:::-;;;734:10:23;;4606:6:11;:::i;561:6847:42:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;-1:-1:-1;561:6847:42;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;561:6847:42;;;;;;:::o;1359:130:2:-;1273:6;561:6847:42;;;-1:-1:-1;;;;;561:6847:42;734:10:23;1422:23:2;561:6847:42;;1359:130:2:o;561:6847:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7456:788:11;-1:-1:-1;;;;;561:6847:42;;;7552:18:11;;;;;561:6847:42;;7456:788:11;;561:6847:42;7456:788:11;561:6847:42;;;7630:16:11;;;561:6847:42;;;1685:7:5;561:6847:42;;;;6936:48;;;;7456:788:11;6932:221:42;;7456:788:11;7285:48:42;;;7456:788:11;7281:119:42;;7456:788:11;7568:1;561:6847:42;;;;;;;;;;7801:21:11;;;;561:6847:42;;;;;8163:26:11;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26:11;7456:788::o;561:6847:42:-;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;7281:119;561:6847;7568:1:11;561:6847:42;7349:16;561:6847;;7374:15;561:6847;7568:1:11;561:6847:42;;7281:119;;7285:48;561:6847;;7568:1:11;561:6847:42;7308:19;561:6847;;;;7568:1:11;561:6847:42;;;7307:26;7285:48;;6932:221;561:6847;7568:1:11;561:6847:42;7044:16;561:6847;;;7568:1:11;561:6847:42;;1333:7;561:6847;;;;;;;7025:15;:61;561:6847;6932:221;561:6847;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;6936:48;561:6847;;7568:1:11;561:6847:42;6959:19;561:6847;;;;7568:1:11;561:6847:42;;;6958:26;6936:48;;561:6847;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;10457:340:11;-1:-1:-1;;;;;561:6847:42;;;;10558:19:11;;561:6847:42;;;10636:21:11;;;561:6847:42;;;10758:32:11;561:6847:42;;10575:1:11;561:6847:42;;;;;10575:1:11;561:6847:42;;10575:1:11;561:6847:42;;;;;10575:1:11;561:6847:42;;;;;;;10758:32:11;10457:340::o;561:6847:42:-;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;570:511:28;561:6847:42;;;;;;638:29:28;;;683:7;:::o;634:441::-;561:6847:42;734:38:28;;561:6847:42;;;;-1:-1:-1;;;788:34:28;;561:6847:42;788:34:28;;;561:6847:42;;;;;;;;;;;;;788:34:28;730:345;852:35;843:44;;852:35;;561:6847:42;;-1:-1:-1;;;903:41:28;;561:6847:42;903:41:28;;;561:6847:42;;;;;;;;;;;;;903:41:28;839:236;974:30;965:39;961:114;;570:511::o;961:114::-;561:6847:42;;-1:-1:-1;;;1020:44:28;;561:6847:42;1020:44:28;;;561:6847:42;;;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;1020:44:28;561:6847:42;;;;647:20:28;561:6847:42;;;;;647:20:28;561:6847:42;5009:1456:28;;;;6021:66;6008:79;;6004:161;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6276:24:28;;;;;;;;;;;;;;-1:-1:-1;;;;;561:6847:42;;6314:20:28;6310:101;;6421:37;5009:1456;:::o;6310:101::-;6350:50;6276:24;6350:50;:::o;6276:24::-;561:6847:42;;;;;;;;;;;6004:161:28;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o;3695:262:29:-;3779:4;3788:11;-1:-1:-1;;;;;561:6847:42;3771:28:29;;:63;;3695:262;3767:184;;;3857:22;3850:29;:::o;3767:184::-;561:6847:42;;4054:81:29;;;561:6847:42;1929:95:29;561:6847:42;;4077:11:29;561:6847:42;1929:95:29;;561:6847:42;4090:14:29;1929:95;;;561:6847:42;4106:13:29;1929:95;;;561:6847:42;3779:4:29;561:6847:42;1929:95:29;;561:6847:42;;4054:81:29;;1929:95;561:6847:42;;;;;;;;;;;;;;4044:92:29;;3910:30;:::o;3771:63::-;3820:14;;3803:13;:31;3771:63;;3367:268:25;1371:66;3490:47;;1371:66;;;2633:40;;2687:11;2696:2;2687:11;;2683:69;;561:6847:42;;;;;;:::i;:::-;2348:90:25;;2292:2;561:6847:42;;2348:90:25;3553:22;:::o;2683:69::-;561:6847:42;;-1:-1:-1;;;2721:20:25;;;;;3486:143;-1:-1:-1;561:6847:42;;5454:13:29;561:6847:42;;-1:-1:-1;561:6847:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1371:66:25;;;;;;;:::i;:::-;3606:12;:::o;561:6847:42:-;5454:13:29;-1:-1:-1;561:6847:42;;;-1:-1:-1;;561:6847:42;;;;;;;-1:-1:-1;1371:66:25;;-1:-1:-1;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:66:25;561:6847:42;;;;;;;;;;;;5454:13:29;561:6847:42;;;;;;;3367:268:25;1371:66;3490:47;;1371:66;;;2633:40;;2687:11;2696:2;2687:11;;2683:69;;561:6847:42;;;;;;:::i;3486:143:25:-;-1:-1:-1;561:6847:42;;5512:16:29;561:6847:42;;-1:-1:-1;561:6847:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1371:66:25;;;;;;;:::i;561:6847:42:-;5512:16:29;-1:-1:-1;561:6847:42;;;-1:-1:-1;;561:6847:42;;;;;;;-1:-1:-1;1371:66:25;;-1:-1:-1;;561:6847:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:564;-1:-1:-1;;;;;561:6847:42;-1:-1:-1;561:6847:42;;;5086:11;561:6847;;;;;5120:19;;;561:6847;;;-1:-1:-1;561:6847:42;;5119:20;5115:34;;5182:23;;;561:6847;;1090:8;561:6847;;;;;;;5164:15;:60;5160:99;;1207:8;561:6847;;;;;;;;;5164:15;5273:64;;5269:123;;561:6847;5164:15;;561:6847;5164:15;;561:6847;;;;;;;;;;;;;;;;;;;;4967:564;:::o;561:6847::-;-1:-1:-1;;;561:6847:42;;;;;;;;;-1:-1:-1;;;561:6847:42;;;;;;;;5269:123;561:6847;;;;;5353:28;:::o;561:6847::-;-1:-1:-1;;;561:6847:42;;;;;;;;5160:99;5240:8;;;;:::o;5115:34::-;5141:8;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n/// @title XAO Token Contract\n/// @author XAO Protocol Team\n/// @notice This is the main token contract for the XAO ecosystem\n/// @dev Implementation of the XAO token with pausable and permit functionality\ncontract XAOToken is ERC20, ERC20Permit, Pausable, Ownable {\n    using SafeMath for uint256;\n\n    /// @notice The total initial supply of XAO tokens (1 billion)\n    /// @dev Stored as a constant with 18 decimal places\n    uint256 public constant INITIAL_SUPPLY = 1_000_000_000 * 10**18;\n\n    /// @notice The portion of tokens allocated to the team (20%)\n    uint256 public constant TEAM_ALLOCATION = INITIAL_SUPPLY * 20 / 100;\n\n    /// @notice The vesting cliff period for team tokens\n    uint256 public constant VESTING_CLIFF = 180 days;\n\n    /// @notice The total vesting duration for team tokens\n    uint256 public constant VESTING_DURATION = 720 days;\n\n    /// @notice The minimum delay between transfers (anti flash loan)\n    uint256 public constant TRANSFER_DELAY = 1 hours;\n\n    /// @notice Struct to track team member vesting details\n    struct TeamMember {\n        uint256 allocation;\n        uint256 claimed;\n        uint256 vestingStart;\n        bool isActive;\n    }\n\n    /// @notice Mapping of team member addresses to their vesting details\n    mapping(address => TeamMember) public teamMembers;\n\n    /// @notice Mapping to track last transfer timestamp for each address\n    mapping(address => uint256) public lastTransferTime;\n\n    /// @notice Mapping to track addresses exempt from transfer delay\n    mapping(address => bool) public transferDelayExempt;\n\n    /// @notice Total amount of team tokens allocated\n    uint256 public totalTeamAllocated;\n\n    /// @notice Emitted when a team member is added\n    event TeamMemberAdded(address indexed member, uint256 allocation);\n\n    /// @notice Emitted when team tokens are claimed\n    event TeamTokensClaimed(address indexed member, uint256 amount);\n\n    /// @notice Emitted when transfer delay exemption is updated\n    event TransferDelayExemptionUpdated(address indexed account, bool exempt);\n\n    /// @notice Creates a new XAO token contract\n    /// @dev Initializes the ERC20 token with name, symbol, and mints initial supply\n    constructor() ERC20(\"XAO Token\", \"XAO\") ERC20Permit(\"XAO Token\") {\n        // Mint initial supply minus team allocation to deployer\n        _mint(msg.sender, INITIAL_SUPPLY.sub(TEAM_ALLOCATION));\n    }\n\n    /// @notice Returns the total token supply including reserved team allocation\n    /// @dev Overrides ERC20 totalSupply() to include both circulating and reserved tokens\n    function totalSupply() public view virtual override returns (uint256) {\n        return INITIAL_SUPPLY;\n    }\n\n    /// @notice Adds a new team member with token allocation\n    /// @dev Can only be called by the contract owner\n    /// @param member Address of the team member\n    /// @param allocation Amount of tokens allocated to the member\n    function addTeamMember(address member, uint256 allocation) external onlyOwner {\n        require(member != address(0), \"Invalid address\");\n        require(!teamMembers[member].isActive, \"Already a team member\");\n        require(allocation > 0, \"Invalid allocation\");\n        require(totalTeamAllocated.add(allocation) <= TEAM_ALLOCATION, \"Exceeds team allocation\");\n\n        teamMembers[member] = TeamMember({\n            allocation: allocation,\n            claimed: 0,\n            vestingStart: block.timestamp,\n            isActive: true\n        });\n\n        totalTeamAllocated = totalTeamAllocated.add(allocation);\n        emit TeamMemberAdded(member, allocation);\n    }\n\n    /// @notice Claims vested team tokens\n    /// @dev Transfers available vested tokens to the team member\n    function claimTeamTokens() external {\n        TeamMember storage teamMember = teamMembers[msg.sender];\n        require(teamMember.isActive, \"Not a team member\");\n        require(\n            block.timestamp >= teamMember.vestingStart.add(VESTING_CLIFF),\n            \"Still in cliff period\"\n        );\n\n        uint256 vestedAmount = calculateVestedAmount(msg.sender);\n        uint256 claimableAmount = vestedAmount.sub(teamMember.claimed);\n        require(claimableAmount > 0, \"No tokens to claim\");\n\n        teamMember.claimed = teamMember.claimed.add(claimableAmount);\n        _mint(msg.sender, claimableAmount);\n\n        emit TeamTokensClaimed(msg.sender, claimableAmount);\n    }\n\n    /// @notice Calculates vested tokens for a team member\n    /// @dev Takes into account cliff and linear vesting schedule\n    /// @param member Address of the team member\n    /// @return Amount of tokens vested\n    function calculateVestedAmount(address member) public view returns (uint256) {\n        TeamMember storage teamMember = teamMembers[member];\n        if (!teamMember.isActive) return 0;\n\n        if (block.timestamp < teamMember.vestingStart.add(VESTING_CLIFF)) {\n            return 0;\n        }\n\n        if (block.timestamp >= teamMember.vestingStart.add(VESTING_DURATION)) {\n            return teamMember.allocation;\n        }\n\n        return teamMember.allocation.mul(\n            block.timestamp.sub(teamMember.vestingStart)\n        ).div(VESTING_DURATION);\n    }\n\n    /// @notice Sets transfer delay exemption status for an address\n    /// @dev Can only be called by the contract owner\n    /// @param account Address to update exemption status\n    /// @param exempt Whether the address should be exempt from transfer delays\n    function setTransferDelayExempt(address account, bool exempt) external onlyOwner {\n        transferDelayExempt[account] = exempt;\n        emit TransferDelayExemptionUpdated(account, exempt);\n    }\n\n    /// @notice Pauses all token transfers\n    /// @dev Can only be called by the contract owner\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpauses all token transfers\n    /// @dev Can only be called by the contract owner\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /// @notice Hook that is called before any transfer of tokens\n    /// @dev Ensures transfers cannot occur while paused and enforces transfer delay\n    /// @param from The address tokens are transferred from\n    /// @param to The address tokens are transferred to\n    /// @param amount The amount of tokens to be transferred\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        require(!paused(), \"Token transfer paused\");\n\n        // Check transfer delay for non-exempt addresses and non-minting transfers\n        if (from != address(0) && !transferDelayExempt[from]) {\n            require(\n                block.timestamp >= lastTransferTime[from].add(TRANSFER_DELAY),\n                \"Transfer delay not met\"\n            );\n        }\n\n        super._beforeTokenTransfer(from, to, amount);\n\n        // Update last transfer time after successful transfer\n        if (from != address(0) && !transferDelayExempt[from]) {\n            lastTransferTime[from] = block.timestamp;\n        }\n    }\n}",
  "sourcePath": "/home/runner/workspace/contracts/XAOToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/XAOToken.sol",
    "exportedSymbols": {
      "Context": [
        5039
      ],
      "Counters": [
        5113
      ],
      "ECDSA": [
        6034
      ],
      "EIP712": [
        6238
      ],
      "ERC20": [
        2706
      ],
      "ERC20Permit": [
        2956
      ],
      "IERC20": [
        2784
      ],
      "IERC20Metadata": [
        2981
      ],
      "IERC20Permit": [
        3017
      ],
      "IERC5267": [
        545
      ],
      "Math": [
        7140
      ],
      "Ownable": [
        501
      ],
      "Pausable": [
        653
      ],
      "SafeMath": [
        7452
      ],
      "ShortString": [
        5118
      ],
      "ShortStrings": [
        5329
      ],
      "SignedMath": [
        7557
      ],
      "StorageSlot": [
        5439
      ],
      "Strings": [
        5668
      ],
      "XAOToken": [
        12224
      ]
    },
    "id": 12225,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11776,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:42"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 11777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12225,
        "sourceUnit": 2707,
        "src": "58:55:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "id": 11778,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12225,
        "sourceUnit": 2957,
        "src": "114:72:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 11779,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12225,
        "sourceUnit": 654,
        "src": "187:55:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11780,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12225,
        "sourceUnit": 502,
        "src": "243:52:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 11781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12225,
        "sourceUnit": 7453,
        "src": "296:57:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11783,
              "name": "ERC20",
              "nameLocations": [
                "582:5:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2706,
              "src": "582:5:42"
            },
            "id": 11784,
            "nodeType": "InheritanceSpecifier",
            "src": "582:5:42"
          },
          {
            "baseName": {
              "id": 11785,
              "name": "ERC20Permit",
              "nameLocations": [
                "589:11:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2956,
              "src": "589:11:42"
            },
            "id": 11786,
            "nodeType": "InheritanceSpecifier",
            "src": "589:11:42"
          },
          {
            "baseName": {
              "id": 11787,
              "name": "Pausable",
              "nameLocations": [
                "602:8:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 653,
              "src": "602:8:42"
            },
            "id": 11788,
            "nodeType": "InheritanceSpecifier",
            "src": "602:8:42"
          },
          {
            "baseName": {
              "id": 11789,
              "name": "Ownable",
              "nameLocations": [
                "612:7:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 501,
              "src": "612:7:42"
            },
            "id": 11790,
            "nodeType": "InheritanceSpecifier",
            "src": "612:7:42"
          }
        ],
        "canonicalName": "XAOToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11782,
          "nodeType": "StructuredDocumentation",
          "src": "355:206:42",
          "text": "@title XAO Token Contract\n @author XAO Protocol Team\n @notice This is the main token contract for the XAO ecosystem\n @dev Implementation of the XAO token with pausable and permit functionality"
        },
        "fullyImplemented": true,
        "id": 12224,
        "linearizedBaseContracts": [
          12224,
          501,
          653,
          2956,
          6238,
          545,
          3017,
          2706,
          2981,
          2784,
          5039
        ],
        "name": "XAOToken",
        "nameLocation": "570:8:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 11793,
            "libraryName": {
              "id": 11791,
              "name": "SafeMath",
              "nameLocations": [
                "632:8:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7452,
              "src": "632:8:42"
            },
            "nodeType": "UsingForDirective",
            "src": "626:27:42",
            "typeName": {
              "id": 11792,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "documentation": {
              "id": 11794,
              "nodeType": "StructuredDocumentation",
              "src": "659:119:42",
              "text": "@notice The total initial supply of XAO tokens (1 billion)\n @dev Stored as a constant with 18 decimal places"
            },
            "functionSelector": "2ff2e9dc",
            "id": 11801,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "807:14:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "783:63:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11795,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "783:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 11800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "315f3030305f3030305f303030",
                "id": 11796,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "824:13:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1_000_000_000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 11799,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 11797,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "840:2:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 11798,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "844:2:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "840:6:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "824:22:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11802,
              "nodeType": "StructuredDocumentation",
              "src": "853:61:42",
              "text": "@notice The portion of tokens allocated to the team (20%)"
            },
            "functionSelector": "fd99cbed",
            "id": 11809,
            "mutability": "constant",
            "name": "TEAM_ALLOCATION",
            "nameLocation": "943:15:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "919:67:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11803,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "919:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 11808,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 11806,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "id": 11804,
                  "name": "INITIAL_SUPPLY",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11801,
                  "src": "961:14:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3230",
                  "id": 11805,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "978:2:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20_by_1",
                    "typeString": "int_const 20"
                  },
                  "value": "20"
                },
                "src": "961:19:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "313030",
                "id": 11807,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "983:3:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "src": "961:25:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11810,
              "nodeType": "StructuredDocumentation",
              "src": "993:52:42",
              "text": "@notice The vesting cliff period for team tokens"
            },
            "functionSelector": "63f3dbe5",
            "id": 11813,
            "mutability": "constant",
            "name": "VESTING_CLIFF",
            "nameLocation": "1074:13:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1050:48:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313830",
              "id": 11812,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1090:8:42",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15552000_by_1",
                "typeString": "int_const 15552000"
              },
              "value": "180"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11814,
              "nodeType": "StructuredDocumentation",
              "src": "1105:54:42",
              "text": "@notice The total vesting duration for team tokens"
            },
            "functionSelector": "4cfc4d30",
            "id": 11817,
            "mutability": "constant",
            "name": "VESTING_DURATION",
            "nameLocation": "1188:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1164:51:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11815,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 11816,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1207:8:42",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_62208000_by_1",
                "typeString": "int_const 62208000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11818,
              "nodeType": "StructuredDocumentation",
              "src": "1222:65:42",
              "text": "@notice The minimum delay between transfers (anti flash loan)"
            },
            "functionSelector": "1ac3452b",
            "id": 11821,
            "mutability": "constant",
            "name": "TRANSFER_DELAY",
            "nameLocation": "1316:14:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1292:48:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11819,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 11820,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1333:7:42",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3600_by_1",
                "typeString": "int_const 3600"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "XAOToken.TeamMember",
            "id": 11830,
            "members": [
              {
                "constant": false,
                "id": 11823,
                "mutability": "mutable",
                "name": "allocation",
                "nameLocation": "1443:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 11830,
                "src": "1435:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11822,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1435:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11825,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "1471:7:42",
                "nodeType": "VariableDeclaration",
                "scope": 11830,
                "src": "1463:15:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11824,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1463:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11827,
                "mutability": "mutable",
                "name": "vestingStart",
                "nameLocation": "1496:12:42",
                "nodeType": "VariableDeclaration",
                "scope": 11830,
                "src": "1488:20:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11826,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11829,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "1523:8:42",
                "nodeType": "VariableDeclaration",
                "scope": 11830,
                "src": "1518:13:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11828,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:4:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TeamMember",
            "nameLocation": "1414:10:42",
            "nodeType": "StructDefinition",
            "scope": 12224,
            "src": "1407:131:42",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11831,
              "nodeType": "StructuredDocumentation",
              "src": "1544:69:42",
              "text": "@notice Mapping of team member addresses to their vesting details"
            },
            "functionSelector": "c836292b",
            "id": 11836,
            "mutability": "mutable",
            "name": "teamMembers",
            "nameLocation": "1656:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1618:49:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
              "typeString": "mapping(address => struct XAOToken.TeamMember)"
            },
            "typeName": {
              "id": 11835,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11832,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1626:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1618:30:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
                "typeString": "mapping(address => struct XAOToken.TeamMember)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11834,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11833,
                  "name": "TeamMember",
                  "nameLocations": [
                    "1637:10:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11830,
                  "src": "1637:10:42"
                },
                "referencedDeclaration": 11830,
                "src": "1637:10:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                  "typeString": "struct XAOToken.TeamMember"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11837,
              "nodeType": "StructuredDocumentation",
              "src": "1674:69:42",
              "text": "@notice Mapping to track last transfer timestamp for each address"
            },
            "functionSelector": "0d2d8a31",
            "id": 11841,
            "mutability": "mutable",
            "name": "lastTransferTime",
            "nameLocation": "1783:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1748:51:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11840,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11838,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1756:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1748:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11839,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1767:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11842,
              "nodeType": "StructuredDocumentation",
              "src": "1806:65:42",
              "text": "@notice Mapping to track addresses exempt from transfer delay"
            },
            "functionSelector": "34d533f7",
            "id": 11846,
            "mutability": "mutable",
            "name": "transferDelayExempt",
            "nameLocation": "1908:19:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1876:51:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11845,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11843,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1884:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1876:24:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11844,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1895:4:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11847,
              "nodeType": "StructuredDocumentation",
              "src": "1934:49:42",
              "text": "@notice Total amount of team tokens allocated"
            },
            "functionSelector": "13758b68",
            "id": 11849,
            "mutability": "mutable",
            "name": "totalTeamAllocated",
            "nameLocation": "2003:18:42",
            "nodeType": "VariableDeclaration",
            "scope": 12224,
            "src": "1988:33:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11848,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1988:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11850,
              "nodeType": "StructuredDocumentation",
              "src": "2028:47:42",
              "text": "@notice Emitted when a team member is added"
            },
            "eventSelector": "3a039d423feae57db865758a88814c0404d53381c45d2caacd35f3991dc16561",
            "id": 11856,
            "name": "TeamMemberAdded",
            "nameLocation": "2086:15:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "2118:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11856,
                  "src": "2102:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11854,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allocation",
                  "nameLocation": "2134:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11856,
                  "src": "2126:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:44:42"
            },
            "src": "2080:66:42"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11857,
              "nodeType": "StructuredDocumentation",
              "src": "2152:48:42",
              "text": "@notice Emitted when team tokens are claimed"
            },
            "eventSelector": "32a7537ee28ab9e44edfe4f55db5f08bf3a2bc8c09f2b5e0eaf20715d2609eab",
            "id": 11863,
            "name": "TeamTokensClaimed",
            "nameLocation": "2211:17:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11859,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "2245:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11863,
                  "src": "2229:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11861,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2261:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11863,
                  "src": "2253:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2228:40:42"
            },
            "src": "2205:64:42"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11864,
              "nodeType": "StructuredDocumentation",
              "src": "2275:60:42",
              "text": "@notice Emitted when transfer delay exemption is updated"
            },
            "eventSelector": "aa8aa83243031a8b4cddf3ecadd12e4d417b36f774f349ce9f8d1760abc67484",
            "id": 11870,
            "name": "TransferDelayExemptionUpdated",
            "nameLocation": "2346:29:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11866,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2392:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11870,
                  "src": "2376:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11868,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exempt",
                  "nameLocation": "2406:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11870,
                  "src": "2401:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11867,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2375:38:42"
            },
            "src": "2340:74:42"
          },
          {
            "body": {
              "id": 11890,
              "nodeType": "Block",
              "src": "2619:136:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2700:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2704:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2700:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11886,
                            "name": "TEAM_ALLOCATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11809,
                            "src": "2731:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11884,
                            "name": "INITIAL_SUPPLY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11801,
                            "src": "2712:14:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2727:3:42",
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7331,
                          "src": "2712:18:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 11887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2712:35:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11881,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "2694:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:54:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11889,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:54:42"
                }
              ]
            },
            "documentation": {
              "id": 11871,
              "nodeType": "StructuredDocumentation",
              "src": "2420:129:42",
              "text": "@notice Creates a new XAO token contract\n @dev Initializes the ERC20 token with name, symbol, and mints initial supply"
            },
            "id": 11891,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "58414f20546f6b656e",
                    "id": 11874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2574:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_337ada67ea6d303834f1137e27622fa09e07abe22a679eb2dcc606d9608bae2e",
                      "typeString": "literal_string \"XAO Token\""
                    },
                    "value": "XAO Token"
                  },
                  {
                    "hexValue": "58414f",
                    "id": 11875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2587:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f08291ee8228b580f2ac597ec0d66d1a03379989a083c0215cc1a40c172e0a4c",
                      "typeString": "literal_string \"XAO\""
                    },
                    "value": "XAO"
                  }
                ],
                "id": 11876,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11873,
                  "name": "ERC20",
                  "nameLocations": [
                    "2568:5:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2706,
                  "src": "2568:5:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "2568:25:42"
              },
              {
                "arguments": [
                  {
                    "hexValue": "58414f20546f6b656e",
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2606:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_337ada67ea6d303834f1137e27622fa09e07abe22a679eb2dcc606d9608bae2e",
                      "typeString": "literal_string \"XAO Token\""
                    },
                    "value": "XAO Token"
                  }
                ],
                "id": 11879,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11877,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "2594:11:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2956,
                  "src": "2594:11:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:24:42"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:2:42"
            },
            "returnParameters": {
              "id": 11880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2619:0:42"
            },
            "scope": 12224,
            "src": "2554:201:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2204
            ],
            "body": {
              "id": 11900,
              "nodeType": "Block",
              "src": "3004:38:42",
              "statements": [
                {
                  "expression": {
                    "id": 11898,
                    "name": "INITIAL_SUPPLY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11801,
                    "src": "3021:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11897,
                  "id": 11899,
                  "nodeType": "Return",
                  "src": "3014:21:42"
                }
              ]
            },
            "documentation": {
              "id": 11892,
              "nodeType": "StructuredDocumentation",
              "src": "2761:168:42",
              "text": "@notice Returns the total token supply including reserved team allocation\n @dev Overrides ERC20 totalSupply() to include both circulating and reserved tokens"
            },
            "functionSelector": "18160ddd",
            "id": 11901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2943:11:42",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2977:8:42"
            },
            "parameters": {
              "id": 11893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2954:2:42"
            },
            "returnParameters": {
              "id": 11897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11901,
                  "src": "2995:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2994:9:42"
            },
            "scope": 12224,
            "src": "2934:108:42",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11971,
              "nodeType": "Block",
              "src": "3357:594:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11912,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11904,
                          "src": "3375:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3393:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3385:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3385:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3385:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3375:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 11918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3397:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 11911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3367:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3367:48:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11920,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:48:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3433:29:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 11922,
                              "name": "teamMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11836,
                              "src": "3434:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
                                "typeString": "mapping(address => struct XAOToken.TeamMember storage ref)"
                              }
                            },
                            "id": 11924,
                            "indexExpression": {
                              "id": 11923,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11904,
                              "src": "3446:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3434:19:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TeamMember_$11830_storage",
                              "typeString": "struct XAOToken.TeamMember storage ref"
                            }
                          },
                          "id": 11925,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3454:8:42",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11829,
                          "src": "3434:28:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792061207465616d206d656d626572",
                        "id": 11927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3464:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b342b2b192cdf6fe6064b8990f40f972105da7f68a053b9721ab427219d5bfb2",
                          "typeString": "literal_string \"Already a team member\""
                        },
                        "value": "Already a team member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b342b2b192cdf6fe6064b8990f40f972105da7f68a053b9721ab427219d5bfb2",
                          "typeString": "literal_string \"Already a team member\""
                        }
                      ],
                      "id": 11921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3425:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:63:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11929,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:63:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11931,
                          "name": "allocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11906,
                          "src": "3506:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3519:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3506:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616c6c6f636174696f6e",
                        "id": 11934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3522:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8492976ccf9578de548b2fd7f728caae48129b4f6c09b3a1f0639b4b90eec99d",
                          "typeString": "literal_string \"Invalid allocation\""
                        },
                        "value": "Invalid allocation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8492976ccf9578de548b2fd7f728caae48129b4f6c09b3a1f0639b4b90eec99d",
                          "typeString": "literal_string \"Invalid allocation\""
                        }
                      ],
                      "id": 11930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3498:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:45:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11936,
                  "nodeType": "ExpressionStatement",
                  "src": "3498:45:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11940,
                              "name": "allocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11906,
                              "src": "3584:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11938,
                              "name": "totalTeamAllocated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11849,
                              "src": "3561:18:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3580:3:42",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7316,
                            "src": "3561:22:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3561:34:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 11942,
                          "name": "TEAM_ALLOCATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11809,
                          "src": "3599:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3561:53:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473207465616d20616c6c6f636174696f6e",
                        "id": 11944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3616:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d26932392709c827f17eb132666db3578e4a900c9336ec7ff01b9270fc7a442",
                          "typeString": "literal_string \"Exceeds team allocation\""
                        },
                        "value": "Exceeds team allocation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d26932392709c827f17eb132666db3578e4a900c9336ec7ff01b9270fc7a442",
                          "typeString": "literal_string \"Exceeds team allocation\""
                        }
                      ],
                      "id": 11937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3553:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:89:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11946,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:89:42"
                },
                {
                  "expression": {
                    "id": 11957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11947,
                        "name": "teamMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11836,
                        "src": "3653:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
                          "typeString": "mapping(address => struct XAOToken.TeamMember storage ref)"
                        }
                      },
                      "id": 11949,
                      "indexExpression": {
                        "id": 11948,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11904,
                        "src": "3665:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3653:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TeamMember_$11830_storage",
                        "typeString": "struct XAOToken.TeamMember storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11951,
                          "name": "allocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11906,
                          "src": "3712:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 11952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3745:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 11953,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3774:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3780:9:42",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3774:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 11955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3813:4:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 11950,
                        "name": "TeamMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11830,
                        "src": "3675:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TeamMember_$11830_storage_ptr_$",
                          "typeString": "type(struct XAOToken.TeamMember storage pointer)"
                        }
                      },
                      "id": 11956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3700:10:42",
                        "3736:7:42",
                        "3760:12:42",
                        "3803:8:42"
                      ],
                      "names": [
                        "allocation",
                        "claimed",
                        "vestingStart",
                        "isActive"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3675:153:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TeamMember_$11830_memory_ptr",
                        "typeString": "struct XAOToken.TeamMember memory"
                      }
                    },
                    "src": "3653:175:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TeamMember_$11830_storage",
                      "typeString": "struct XAOToken.TeamMember storage ref"
                    }
                  },
                  "id": 11958,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:175:42"
                },
                {
                  "expression": {
                    "id": 11964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11959,
                      "name": "totalTeamAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11849,
                      "src": "3839:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11962,
                          "name": "allocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11906,
                          "src": "3883:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 11960,
                          "name": "totalTeamAllocated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11849,
                          "src": "3860:18:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3879:3:42",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7316,
                        "src": "3860:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 11963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3860:34:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3839:55:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11965,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:55:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11967,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11904,
                        "src": "3925:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11968,
                        "name": "allocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11906,
                        "src": "3933:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11966,
                      "name": "TeamMemberAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11856,
                      "src": "3909:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:35:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11970,
                  "nodeType": "EmitStatement",
                  "src": "3904:40:42"
                }
              ]
            },
            "documentation": {
              "id": 11902,
              "nodeType": "StructuredDocumentation",
              "src": "3048:226:42",
              "text": "@notice Adds a new team member with token allocation\n @dev Can only be called by the contract owner\n @param member Address of the team member\n @param allocation Amount of tokens allocated to the member"
            },
            "functionSelector": "8d13192b",
            "id": 11972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11909,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11908,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3347:9:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3347:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "3347:9:42"
              }
            ],
            "name": "addTeamMember",
            "nameLocation": "3288:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11904,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3310:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "3302:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11906,
                  "mutability": "mutable",
                  "name": "allocation",
                  "nameLocation": "3326:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "3318:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3301:36:42"
            },
            "returnParameters": {
              "id": 11910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3357:0:42"
            },
            "scope": 12224,
            "src": "3279:672:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12046,
              "nodeType": "Block",
              "src": "4101:646:42",
              "statements": [
                {
                  "assignments": [
                    11978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11978,
                      "mutability": "mutable",
                      "name": "teamMember",
                      "nameLocation": "4130:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 12046,
                      "src": "4111:29:42",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                        "typeString": "struct XAOToken.TeamMember"
                      },
                      "typeName": {
                        "id": 11977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11976,
                          "name": "TeamMember",
                          "nameLocations": [
                            "4111:10:42"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11830,
                          "src": "4111:10:42"
                        },
                        "referencedDeclaration": 11830,
                        "src": "4111:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                          "typeString": "struct XAOToken.TeamMember"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11983,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11979,
                      "name": "teamMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11836,
                      "src": "4143:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
                        "typeString": "mapping(address => struct XAOToken.TeamMember storage ref)"
                      }
                    },
                    "id": 11982,
                    "indexExpression": {
                      "expression": {
                        "id": 11980,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4155:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4159:6:42",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4155:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4143:23:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TeamMember_$11830_storage",
                      "typeString": "struct XAOToken.TeamMember storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4111:55:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11985,
                          "name": "teamMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11978,
                          "src": "4184:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                            "typeString": "struct XAOToken.TeamMember storage pointer"
                          }
                        },
                        "id": 11986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4195:8:42",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11829,
                        "src": "4184:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207465616d206d656d626572",
                        "id": 11987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4205:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
                          "typeString": "literal_string \"Not a team member\""
                        },
                        "value": "Not a team member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
                          "typeString": "literal_string \"Not a team member\""
                        }
                      ],
                      "id": 11984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4176:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4176:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11989,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11991,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4256:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4262:9:42",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4256:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11996,
                              "name": "VESTING_CLIFF",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11813,
                              "src": "4303:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 11993,
                                "name": "teamMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11978,
                                "src": "4275:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                                  "typeString": "struct XAOToken.TeamMember storage pointer"
                                }
                              },
                              "id": 11994,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4286:12:42",
                              "memberName": "vestingStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11827,
                              "src": "4275:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4299:3:42",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7316,
                            "src": "4275:27:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4275:42:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4256:61:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374696c6c20696e20636c69666620706572696f64",
                        "id": 11999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4331:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7b420ee5f1d3a5e7db56b75665e7c2a0159aa5304bc89c6bf29ba39fb0cea8a",
                          "typeString": "literal_string \"Still in cliff period\""
                        },
                        "value": "Still in cliff period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7b420ee5f1d3a5e7db56b75665e7c2a0159aa5304bc89c6bf29ba39fb0cea8a",
                          "typeString": "literal_string \"Still in cliff period\""
                        }
                      ],
                      "id": 11990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4235:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4235:129:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12001,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:129:42"
                },
                {
                  "assignments": [
                    12003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12003,
                      "mutability": "mutable",
                      "name": "vestedAmount",
                      "nameLocation": "4383:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 12046,
                      "src": "4375:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12002,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4375:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12008,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4420:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4424:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4420:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12004,
                      "name": "calculateVestedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12108,
                      "src": "4398:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 12007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:33:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4375:56:42"
                },
                {
                  "assignments": [
                    12010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12010,
                      "mutability": "mutable",
                      "name": "claimableAmount",
                      "nameLocation": "4449:15:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 12046,
                      "src": "4441:23:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12016,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12013,
                          "name": "teamMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11978,
                          "src": "4484:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                            "typeString": "struct XAOToken.TeamMember storage pointer"
                          }
                        },
                        "id": 12014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4495:7:42",
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11825,
                        "src": "4484:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12011,
                        "name": "vestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12003,
                        "src": "4467:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 12012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4480:3:42",
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7331,
                      "src": "4467:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:36:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12018,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12010,
                          "src": "4521:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4539:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4521:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e7320746f20636c61696d",
                        "id": 12021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d5449e713a47f03a14de06feb7e7374931b31bbe74b9f8d4277d4797f0eb90e",
                          "typeString": "literal_string \"No tokens to claim\""
                        },
                        "value": "No tokens to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d5449e713a47f03a14de06feb7e7374931b31bbe74b9f8d4277d4797f0eb90e",
                          "typeString": "literal_string \"No tokens to claim\""
                        }
                      ],
                      "id": 12017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4513:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12023,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:50:42"
                },
                {
                  "expression": {
                    "id": 12032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 12024,
                        "name": "teamMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11978,
                        "src": "4574:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                          "typeString": "struct XAOToken.TeamMember storage pointer"
                        }
                      },
                      "id": 12026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4585:7:42",
                      "memberName": "claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11825,
                      "src": "4574:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12030,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12010,
                          "src": "4618:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 12027,
                            "name": "teamMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11978,
                            "src": "4595:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                              "typeString": "struct XAOToken.TeamMember storage pointer"
                            }
                          },
                          "id": 12028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4606:7:42",
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11825,
                          "src": "4595:18:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4614:3:42",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7316,
                        "src": "4595:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4595:39:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4574:60:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12033,
                  "nodeType": "ExpressionStatement",
                  "src": "4574:60:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12035,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4650:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4654:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4650:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12037,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12010,
                        "src": "4662:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12034,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "4644:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4644:34:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12039,
                  "nodeType": "ExpressionStatement",
                  "src": "4644:34:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12041,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4712:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4716:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4712:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12043,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12010,
                        "src": "4724:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12040,
                      "name": "TeamTokensClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11863,
                      "src": "4694:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4694:46:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12045,
                  "nodeType": "EmitStatement",
                  "src": "4689:51:42"
                }
              ]
            },
            "documentation": {
              "id": 11973,
              "nodeType": "StructuredDocumentation",
              "src": "3957:103:42",
              "text": "@notice Claims vested team tokens\n @dev Transfers available vested tokens to the team member"
            },
            "functionSelector": "2af5356a",
            "id": 12047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTeamTokens",
            "nameLocation": "4074:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4089:2:42"
            },
            "returnParameters": {
              "id": 11975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4101:0:42"
            },
            "scope": 12224,
            "src": "4065:682:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12107,
              "nodeType": "Block",
              "src": "5044:487:42",
              "statements": [
                {
                  "assignments": [
                    12057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12057,
                      "mutability": "mutable",
                      "name": "teamMember",
                      "nameLocation": "5073:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 12107,
                      "src": "5054:29:42",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                        "typeString": "struct XAOToken.TeamMember"
                      },
                      "typeName": {
                        "id": 12056,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12055,
                          "name": "TeamMember",
                          "nameLocations": [
                            "5054:10:42"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11830,
                          "src": "5054:10:42"
                        },
                        "referencedDeclaration": 11830,
                        "src": "5054:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                          "typeString": "struct XAOToken.TeamMember"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12061,
                  "initialValue": {
                    "baseExpression": {
                      "id": 12058,
                      "name": "teamMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11836,
                      "src": "5086:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TeamMember_$11830_storage_$",
                        "typeString": "mapping(address => struct XAOToken.TeamMember storage ref)"
                      }
                    },
                    "id": 12060,
                    "indexExpression": {
                      "id": 12059,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12050,
                      "src": "5098:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5086:19:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TeamMember_$11830_storage",
                      "typeString": "struct XAOToken.TeamMember storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5054:51:42"
                },
                {
                  "condition": {
                    "id": 12064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5119:20:42",
                    "subExpression": {
                      "expression": {
                        "id": 12062,
                        "name": "teamMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12057,
                        "src": "5120:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                          "typeString": "struct XAOToken.TeamMember storage pointer"
                        }
                      },
                      "id": 12063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5131:8:42",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11829,
                      "src": "5120:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12067,
                  "nodeType": "IfStatement",
                  "src": "5115:34:42",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 12065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5148:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 12054,
                    "id": 12066,
                    "nodeType": "Return",
                    "src": "5141:8:42"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12068,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5164:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 12069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5170:9:42",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5164:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 12073,
                          "name": "VESTING_CLIFF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11813,
                          "src": "5210:13:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 12070,
                            "name": "teamMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12057,
                            "src": "5182:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                              "typeString": "struct XAOToken.TeamMember storage pointer"
                            }
                          },
                          "id": 12071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5193:12:42",
                          "memberName": "vestingStart",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11827,
                          "src": "5182:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5206:3:42",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7316,
                        "src": "5182:27:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5182:42:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5164:60:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12079,
                  "nodeType": "IfStatement",
                  "src": "5160:99:42",
                  "trueBody": {
                    "id": 12078,
                    "nodeType": "Block",
                    "src": "5226:33:42",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 12076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5247:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 12054,
                        "id": 12077,
                        "nodeType": "Return",
                        "src": "5240:8:42"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12080,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5273:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 12081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5279:9:42",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5273:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 12085,
                          "name": "VESTING_DURATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11817,
                          "src": "5320:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 12082,
                            "name": "teamMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12057,
                            "src": "5292:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                              "typeString": "struct XAOToken.TeamMember storage pointer"
                            }
                          },
                          "id": 12083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5303:12:42",
                          "memberName": "vestingStart",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11827,
                          "src": "5292:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5316:3:42",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7316,
                        "src": "5292:27:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5292:45:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5273:64:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12092,
                  "nodeType": "IfStatement",
                  "src": "5269:123:42",
                  "trueBody": {
                    "id": 12091,
                    "nodeType": "Block",
                    "src": "5339:53:42",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 12088,
                            "name": "teamMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12057,
                            "src": "5360:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                              "typeString": "struct XAOToken.TeamMember storage pointer"
                            }
                          },
                          "id": 12089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5371:10:42",
                          "memberName": "allocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11823,
                          "src": "5360:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 12054,
                        "id": 12090,
                        "nodeType": "Return",
                        "src": "5353:28:42"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12104,
                        "name": "VESTING_DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11817,
                        "src": "5507:16:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 12099,
                                  "name": "teamMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12057,
                                  "src": "5468:10:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                                    "typeString": "struct XAOToken.TeamMember storage pointer"
                                  }
                                },
                                "id": 12100,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5479:12:42",
                                "memberName": "vestingStart",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11827,
                                "src": "5468:23:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 12096,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "5448:5:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 12097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5454:9:42",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5448:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5464:3:42",
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7331,
                              "src": "5448:19:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5448:44:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 12093,
                              "name": "teamMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12057,
                              "src": "5409:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TeamMember_$11830_storage_ptr",
                                "typeString": "struct XAOToken.TeamMember storage pointer"
                              }
                            },
                            "id": 12094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5420:10:42",
                            "memberName": "allocation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11823,
                            "src": "5409:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5431:3:42",
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7346,
                          "src": "5409:25:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5409:93:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 12103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5503:3:42",
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7361,
                      "src": "5409:97:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5409:115:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12054,
                  "id": 12106,
                  "nodeType": "Return",
                  "src": "5402:122:42"
                }
              ]
            },
            "documentation": {
              "id": 12048,
              "nodeType": "StructuredDocumentation",
              "src": "4753:209:42",
              "text": "@notice Calculates vested tokens for a team member\n @dev Takes into account cliff and linear vesting schedule\n @param member Address of the team member\n @return Amount of tokens vested"
            },
            "functionSelector": "ffa06b2a",
            "id": 12108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateVestedAmount",
            "nameLocation": "4976:21:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12050,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "5006:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12108,
                  "src": "4998:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4997:16:42"
            },
            "returnParameters": {
              "id": 12054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12108,
                  "src": "5035:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5035:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5034:9:42"
            },
            "scope": 12224,
            "src": "4967:564:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12129,
              "nodeType": "Block",
              "src": "5878:115:42",
              "statements": [
                {
                  "expression": {
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12118,
                        "name": "transferDelayExempt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11846,
                        "src": "5888:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12120,
                      "indexExpression": {
                        "id": 12119,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12111,
                        "src": "5908:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5888:28:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12121,
                      "name": "exempt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12113,
                      "src": "5919:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5888:37:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "5888:37:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12125,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12111,
                        "src": "5970:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12126,
                        "name": "exempt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12113,
                        "src": "5979:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12124,
                      "name": "TransferDelayExemptionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11870,
                      "src": "5940:29:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 12127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5940:46:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12128,
                  "nodeType": "EmitStatement",
                  "src": "5935:51:42"
                }
              ]
            },
            "documentation": {
              "id": 12109,
              "nodeType": "StructuredDocumentation",
              "src": "5537:255:42",
              "text": "@notice Sets transfer delay exemption status for an address\n @dev Can only be called by the contract owner\n @param account Address to update exemption status\n @param exempt Whether the address should be exempt from transfer delays"
            },
            "functionSelector": "b3c95fe2",
            "id": 12130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12115,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5868:9:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "5868:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "5868:9:42"
              }
            ],
            "name": "setTransferDelayExempt",
            "nameLocation": "5806:22:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12111,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5837:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12130,
                  "src": "5829:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5829:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12113,
                  "mutability": "mutable",
                  "name": "exempt",
                  "nameLocation": "5851:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12130,
                  "src": "5846:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5846:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5828:30:42"
            },
            "returnParameters": {
              "id": 12117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5878:0:42"
            },
            "scope": 12224,
            "src": "5797:196:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12139,
              "nodeType": "Block",
              "src": "6130:25:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12136,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "6140:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6140:8:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12138,
                  "nodeType": "ExpressionStatement",
                  "src": "6140:8:42"
                }
              ]
            },
            "documentation": {
              "id": 12131,
              "nodeType": "StructuredDocumentation",
              "src": "5999:92:42",
              "text": "@notice Pauses all token transfers\n @dev Can only be called by the contract owner"
            },
            "functionSelector": "8456cb59",
            "id": 12140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12133,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6120:9:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "6120:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "6120:9:42"
              }
            ],
            "name": "pause",
            "nameLocation": "6105:5:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6110:2:42"
            },
            "returnParameters": {
              "id": 12135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6130:0:42"
            },
            "scope": 12224,
            "src": "6096:59:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12149,
              "nodeType": "Block",
              "src": "6296:27:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12146,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "6306:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6306:10:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12148,
                  "nodeType": "ExpressionStatement",
                  "src": "6306:10:42"
                }
              ]
            },
            "documentation": {
              "id": 12141,
              "nodeType": "StructuredDocumentation",
              "src": "6161:94:42",
              "text": "@notice Unpauses all token transfers\n @dev Can only be called by the contract owner"
            },
            "functionSelector": "3f4ba83a",
            "id": 12150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12143,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6286:9:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "6286:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "6286:9:42"
              }
            ],
            "name": "unpause",
            "nameLocation": "6269:7:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6276:2:42"
            },
            "returnParameters": {
              "id": 12145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6296:0:42"
            },
            "scope": 12224,
            "src": "6260:63:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2694
            ],
            "body": {
              "id": 12222,
              "nodeType": "Block",
              "src": "6785:621:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6803:9:42",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12162,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "6804:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 12163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:8:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e7366657220706175736564",
                        "id": 12165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6814:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5b8e4c4d8ca0e1006111109f743ca9c1da0a901f9233f45309be9c47faa0ee",
                          "typeString": "literal_string \"Token transfer paused\""
                        },
                        "value": "Token transfer paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5b8e4c4d8ca0e1006111109f743ca9c1da0a901f9233f45309be9c47faa0ee",
                          "typeString": "literal_string \"Token transfer paused\""
                        }
                      ],
                      "id": 12161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6795:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6795:43:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12167,
                  "nodeType": "ExpressionStatement",
                  "src": "6795:43:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12168,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "6936:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6952:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6944:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6944:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6944:10:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6936:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 12177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6958:26:42",
                      "subExpression": {
                        "baseExpression": {
                          "id": 12174,
                          "name": "transferDelayExempt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11846,
                          "src": "6959:19:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 12176,
                        "indexExpression": {
                          "id": 12175,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12153,
                          "src": "6979:4:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6959:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6936:48:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12193,
                  "nodeType": "IfStatement",
                  "src": "6932:221:42",
                  "trueBody": {
                    "id": 12192,
                    "nodeType": "Block",
                    "src": "6986:167:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 12180,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "7025:5:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 12181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7031:9:42",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7025:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 12186,
                                    "name": "TRANSFER_DELAY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11821,
                                    "src": "7071:14:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 12182,
                                      "name": "lastTransferTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11841,
                                      "src": "7044:16:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 12184,
                                    "indexExpression": {
                                      "id": 12183,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12153,
                                      "src": "7061:4:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7044:22:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 12185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7067:3:42",
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7316,
                                  "src": "7044:26:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 12187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7044:42:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7025:61:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e736665722064656c6179206e6f74206d6574",
                              "id": 12189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7104:24:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94fb1c18fd1c015710f0ee46d1ff50929a53a1c933e467ce0faa68cd096eb829",
                                "typeString": "literal_string \"Transfer delay not met\""
                              },
                              "value": "Transfer delay not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94fb1c18fd1c015710f0ee46d1ff50929a53a1c933e467ce0faa68cd096eb829",
                                "typeString": "literal_string \"Transfer delay not met\""
                              }
                            ],
                            "id": 12179,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7000:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7000:142:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12191,
                        "nodeType": "ExpressionStatement",
                        "src": "7000:142:42"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12197,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "7190:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12198,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12155,
                        "src": "7196:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12199,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12157,
                        "src": "7200:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12194,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7163:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_XAOToken_$12224_$",
                          "typeString": "type(contract super XAOToken)"
                        }
                      },
                      "id": 12196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7169:20:42",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2694,
                      "src": "7163:26:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7163:44:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12201,
                  "nodeType": "ExpressionStatement",
                  "src": "7163:44:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12202,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "7285:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7301:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7293:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7293:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7293:10:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7285:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 12211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7307:26:42",
                      "subExpression": {
                        "baseExpression": {
                          "id": 12208,
                          "name": "transferDelayExempt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11846,
                          "src": "7308:19:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 12210,
                        "indexExpression": {
                          "id": 12209,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12153,
                          "src": "7328:4:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7308:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7285:48:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12221,
                  "nodeType": "IfStatement",
                  "src": "7281:119:42",
                  "trueBody": {
                    "id": 12220,
                    "nodeType": "Block",
                    "src": "7335:65:42",
                    "statements": [
                      {
                        "expression": {
                          "id": 12218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 12213,
                              "name": "lastTransferTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11841,
                              "src": "7349:16:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12215,
                            "indexExpression": {
                              "id": 12214,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12153,
                              "src": "7366:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7349:22:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 12216,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "7374:5:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 12217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7380:9:42",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7374:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7349:40:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12219,
                        "nodeType": "ExpressionStatement",
                        "src": "7349:40:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 12151,
              "nodeType": "StructuredDocumentation",
              "src": "6329:323:42",
              "text": "@notice Hook that is called before any transfer of tokens\n @dev Ensures transfers cannot occur while paused and enforces transfer delay\n @param from The address tokens are transferred from\n @param to The address tokens are transferred to\n @param amount The amount of tokens to be transferred"
            },
            "id": 12223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "6666:20:42",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6776:8:42"
            },
            "parameters": {
              "id": 12158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12153,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6704:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12223,
                  "src": "6696:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6696:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12155,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6726:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12223,
                  "src": "6718:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6718:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12157,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6746:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 12223,
                  "src": "6738:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6738:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6686:72:42"
            },
            "returnParameters": {
              "id": 12160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6785:0:42"
            },
            "scope": 12224,
            "src": "6657:749:42",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 12225,
        "src": "561:6847:42",
        "usedErrors": [
          5126,
          5128
        ]
      }
    ],
    "src": "32:7376:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31": {
          "anonymous": false,
          "inputs": [],
          "name": "EIP712DomainChanged",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x3a039d423feae57db865758a88814c0404d53381c45d2caacd35f3991dc16561": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "member",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "allocation",
              "type": "uint256"
            }
          ],
          "name": "TeamMemberAdded",
          "type": "event"
        },
        "0x32a7537ee28ab9e44edfe4f55db5f08bf3a2bc8c09f2b5e0eaf20715d2609eab": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "member",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TeamTokensClaimed",
          "type": "event"
        },
        "0xaa8aa83243031a8b4cddf3ecadd12e4d417b36f774f349ce9f8d1760abc67484": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "exempt",
              "type": "bool"
            }
          ],
          "name": "TransferDelayExemptionUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5017A545b09ab9a30499DE7F431DF0855bCb7275",
      "transactionHash": "0x05fb92ecf9dd424b9c27d35c70c7faa84917ed74c516f54350a307697c6fafbc"
    },
    "84532": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31": {
          "anonymous": false,
          "inputs": [],
          "name": "EIP712DomainChanged",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x3a039d423feae57db865758a88814c0404d53381c45d2caacd35f3991dc16561": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "member",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "allocation",
              "type": "uint256"
            }
          ],
          "name": "TeamMemberAdded",
          "type": "event"
        },
        "0x32a7537ee28ab9e44edfe4f55db5f08bf3a2bc8c09f2b5e0eaf20715d2609eab": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "member",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TeamTokensClaimed",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xaa8aa83243031a8b4cddf3ecadd12e4d417b36f774f349ce9f8d1760abc67484": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "exempt",
              "type": "bool"
            }
          ],
          "name": "TransferDelayExemptionUpdated",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0152F9363Bb640520525993016aDc13B67890335",
      "transactionHash": "0xbd9af3af73f5310207c8fd465a0516458d463bec0c442ae80a90e1145401a65b"
    },
    "1740708955840": {
      "events": {},
      "links": {},
      "address": "0xA0759E2ae8FD1a2fDd62A93Ca60DdA7d273bd823",
      "transactionHash": "0x62e4bc71d73d503cd1db212e849cb07a10e489c2ce54d2c4218deb3b96a7bb87"
    },
    "1740709118680": {
      "events": {},
      "links": {},
      "address": "0x047e53fa2D0aD545B6f45017Fe0FA7Ac1CC577aa",
      "transactionHash": "0xb82a8208a73fd7f11188c6943b238c2b9c689bf62eb6084e82b77eabc0765633"
    },
    "1740709495205": {
      "events": {},
      "links": {},
      "address": "0xAAEDCAe40c01e0f61a71252465F95BF287789380",
      "transactionHash": "0xbbb84aa9172b25253dd4c859c5a834629753e73548b10b4841bfdf5717f7dec4"
    },
    "1740711842354": {
      "events": {},
      "links": {},
      "address": "0xCAA17E3d6bBaEE43351fC421F3B328DBbd55D2a5",
      "transactionHash": "0x9690c724f9d0de6be9930aed3c7d0877d8a31a5cc95c8352a83cff4e595aafb6"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-01T00:09:28.565Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "XAO Protocol Team",
    "details": "Implementation of the XAO token with pausable and permit functionality",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "EIP712DomainChanged()": {
        "details": "MAY be emitted to signal that the domain could have changed."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
      },
      "addTeamMember(address,uint256)": {
        "details": "Can only be called by the contract owner",
        "params": {
          "allocation": "Amount of tokens allocated to the member",
          "member": "Address of the team member"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "calculateVestedAmount(address)": {
        "details": "Takes into account cliff and linear vesting schedule",
        "params": {
          "member": "Address of the team member"
        },
        "returns": {
          "_0": "Amount of tokens vested"
        }
      },
      "claimTeamTokens()": {
        "details": "Transfers available vested tokens to the team member"
      },
      "constructor": {
        "details": "Initializes the ERC20 token with name, symbol, and mints initial supply"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "eip712Domain()": {
        "details": "See {EIP-5267}. _Available since v4.9._"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Can only be called by the contract owner"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setTransferDelayExempt(address,bool)": {
        "details": "Can only be called by the contract owner",
        "params": {
          "account": "Address to update exemption status",
          "exempt": "Whether the address should be exempt from transfer delays"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Overrides ERC20 totalSupply() to include both circulating and reserved tokens"
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Can only be called by the contract owner"
      }
    },
    "stateVariables": {
      "INITIAL_SUPPLY": {
        "details": "Stored as a constant with 18 decimal places"
      }
    },
    "title": "XAO Token Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TeamMemberAdded(address,uint256)": {
        "notice": "Emitted when a team member is added"
      },
      "TeamTokensClaimed(address,uint256)": {
        "notice": "Emitted when team tokens are claimed"
      },
      "TransferDelayExemptionUpdated(address,bool)": {
        "notice": "Emitted when transfer delay exemption is updated"
      }
    },
    "kind": "user",
    "methods": {
      "INITIAL_SUPPLY()": {
        "notice": "The total initial supply of XAO tokens (1 billion)"
      },
      "TEAM_ALLOCATION()": {
        "notice": "The portion of tokens allocated to the team (20%)"
      },
      "TRANSFER_DELAY()": {
        "notice": "The minimum delay between transfers (anti flash loan)"
      },
      "VESTING_CLIFF()": {
        "notice": "The vesting cliff period for team tokens"
      },
      "VESTING_DURATION()": {
        "notice": "The total vesting duration for team tokens"
      },
      "addTeamMember(address,uint256)": {
        "notice": "Adds a new team member with token allocation"
      },
      "calculateVestedAmount(address)": {
        "notice": "Calculates vested tokens for a team member"
      },
      "claimTeamTokens()": {
        "notice": "Claims vested team tokens"
      },
      "constructor": {
        "notice": "Creates a new XAO token contract"
      },
      "lastTransferTime(address)": {
        "notice": "Mapping to track last transfer timestamp for each address"
      },
      "pause()": {
        "notice": "Pauses all token transfers"
      },
      "setTransferDelayExempt(address,bool)": {
        "notice": "Sets transfer delay exemption status for an address"
      },
      "teamMembers(address)": {
        "notice": "Mapping of team member addresses to their vesting details"
      },
      "totalSupply()": {
        "notice": "Returns the total token supply including reserved team allocation"
      },
      "totalTeamAllocated()": {
        "notice": "Total amount of team tokens allocated"
      },
      "transferDelayExempt(address)": {
        "notice": "Mapping to track addresses exempt from transfer delay"
      },
      "unpause()": {
        "notice": "Unpauses all token transfers"
      }
    },
    "notice": "This is the main token contract for the XAO ecosystem",
    "version": 1
  }
}